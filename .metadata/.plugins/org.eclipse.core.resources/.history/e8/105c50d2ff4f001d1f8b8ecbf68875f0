/*
Leia um valor de ponto flutuante com duas casas decimais. 
Este valor representa um valor monetário. A seguir, calcule o menor número de notas e moedas 
possíveis no qual o valor pode ser decomposto. As notas consideradas são de 100, 50, 20, 10, 5, 2.
As moedas possíveis são de 1, 0.50, 0.25, 0.10, 0.05 e 0.01. 
A seguir mostre a relação de notas necessárias.

Entrada
O arquivo de entrada contém um valor de ponto flutuante N (0 ≤ N ≤ 1000000.00).

Saída
Imprima a quantidade mínima de notas e moedas necessárias para trocar o valor inicial, 
conforme exemplo fornecido.

Obs: Utilize ponto (.) para separar a parte decimal.

 */


package NotasEMoedas1021;

import java.util.Locale;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner teclado = new Scanner(System.in);
		
		teclado.useLocale(Locale.US);
		
		double nota = teclado.nextDouble();
		
		/*int centena;
		int dezena50;
		int dezena20;
		int dezena10;
		int unidade5;
		int unidade2;
		int unidade1;
		
		centena = valor/100; // 1
		dezena50 = (valor%100)/50; // 76/50 = 1
		dezena20 = (valor%100)%50/20; // 76%50=26/20=1
		dezena10 = (valor%100)%50%20/10; // 76%50=26%20=6/10=0
		unidade5 = (valor%100)%50%20%10/5; //76%50=26%20=6%10=6/5=1
		unidade2 = (valor%100)%50%20%10%5/2; //76%50=26%20=6%10=6%5=1/2=0
		unidade1 = (valor%100)%50%20%10%5%2/1; //76%50=26%20=6%10=6%5=1%2=1 */
		
		System.out.printf("%.2\n", nota);
		teclado.close();
		
		
	}

}
